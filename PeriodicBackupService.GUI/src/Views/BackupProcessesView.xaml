<UserControl x:Class="GUI.Views.BackupProcessesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ie="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:vm="clr-namespace:PeriodicBackupService.GUI.Core.ViewModels;assembly=PeriodicBackupService.GUI.Core"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=vm:BackupProcessesViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
    </UserControl.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Active processes -->
        <ListView
            Grid.Column="0" Grid.ColumnSpan="5" Margin="1, 2"
            ItemsSource="{Binding Path=ProcessModels}"
            SelectedIndex="{Binding Path=SelectedIndex, Mode=TwoWay}">

            <ie:Interaction.Triggers>
                <ie:EventTrigger EventName="SelectionChanged">
                    <ie:InvokeCommandAction Command="{Binding Path=SelectionChangedCommand}"/>
                </ie:EventTrigger>
            </ie:Interaction.Triggers>

            <ListView.Resources>
                <ContextMenu x:Key="ItemContextMenu">
                    <MenuItem Header="{Binding Path=DataContext.ToggleButtonText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
                              Command="{Binding Path=DataContext.ToggleProcessCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                    <MenuItem Header="Force backup"
                              Command="{Binding Path=DataContext.ForceBackupCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                    <Separator/>
                    <MenuItem Header="Terminate"
                              Command="{Binding Path=DataContext.TerminateProcessCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                </ContextMenu>
            </ListView.Resources>

            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}" >
                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.View>
                <GridView AllowsColumnReorder="False">

                    <GridViewColumn Width="200">
                        <GridViewColumnHeader Content="Name" Command="{Binding Path=SortNameCommand}"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Width="90">
                        <GridViewColumnHeader Content="Next backup" Command="{Binding Path=SortNextBackupCommand}"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding NextBackup}" TextAlignment="Center"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Width="100">
                        <GridViewColumnHeader Content="Last Backup" Command="{Binding Path=SortLastBackupCommand}"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}">
                                    <ContentControl.Style>
                                        <Style TargetType="{x:Type ContentControl}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsBackingUp}" Value="True">
                                                    <Setter Property="ContentTemplate">
                                                        <Setter.Value>
                                                            <DataTemplate>
                                                                <ProgressBar IsIndeterminate="True"/>
                                                            </DataTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsBackingUp}" Value="False">
                                                    <Setter Property="ContentTemplate">
                                                        <Setter.Value>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding LastBackupStatus}" TextAlignment="Center"/>
                                                            </DataTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentControl.Style>
                                </ContentControl>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Width="100">
                        <GridViewColumnHeader Content="Status" Command="{Binding Path=SortStatusCommand}"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Status}" TextAlignment="Center"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                </GridView>
            </ListView.View>

        </ListView>

        <!-- Add process -->
        <Button
            Grid.Column="4" Grid.Row="1" Margin="20,8, 10, 10" Height="40"
            BorderThickness="0"
            FontSize="15"
            Command="{Binding Path=AddProcessCommand}">
            Add
        </Button>

        <!-- Edit process -->
        <Button 
            Grid.Column="2" Grid.Row="1" Margin="1,8,20,10" Height="40"
            BorderThickness="0"
            FontSize="15"
            Command="{Binding Path=EditProcessCommand}"
            Content="Edit"
            Visibility="{Binding Path=ShowProcessButtons, Converter={StaticResource BoolToVis}}"/>

        <!-- Toggle process -->
        <Button 
            Grid.Column="1" Grid.Row="1" Margin="1,8,20,10" Height="40"
            BorderThickness="0"
            FontSize="15"
            Command="{Binding Path=ToggleProcessCommand}"
            Content="{Binding Path=ToggleButtonText}"
            Visibility="{Binding Path=ShowProcessButtons, Converter={StaticResource BoolToVis}}"/>

        <!-- Terminate process -->
        <Button 
            Grid.Column="0" Grid.Row="1" Margin="1,8, 20, 10" Height="40"
            BorderThickness="0"
            FontSize="15"
            Command="{Binding Path=TerminateProcessCommand}"
            Visibility="{Binding Path=ShowProcessButtons, Converter={StaticResource BoolToVis}}">
            Terminate
        </Button>

    </Grid>
</UserControl>
